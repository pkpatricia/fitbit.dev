{"name":"JSON Content Importer","slug":"json-content-importer","version":"1.2.18","author":"<a href=\"https:\/\/json-content-importer.com\/\">Bernhard Kux<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/berkux","contributors":{"berkux":"https:\/\/profiles.wordpress.org\/berkux"},"requires":"3.0","tested":"4.7.5","compatibility":[],"rating":100,"ratings":{"5":13,"4":0,"3":0,"2":0,"1":0},"num_ratings":13,"support_threads":19,"support_threads_resolved":17,"downloaded":28939,"last_updated":"2017-06-04 1:32pm GMT","added":"2015-01-24","homepage":"https:\/\/json-content-importer.com\/","sections":{"description":"<h4>Display live data from a JSON-feed \/ API on your wordpress-site!<\/h4>\n<p>This is the answer when you ask: Why Do I Need this Plugin on my Website?<\/p>\n<h4>JSON Content Importer &#8211; API- and Webservice-Connector &#8211; Powerful and Simple JSON-Import Plugin:<\/h4>\n<ul>\n<li>Use a template engine to display the data of an JSON-Feed.<\/li>\n<li>Define the url of the JSON-Feed, a template for it and other options like number of displayed items, cachetime etc..<\/li>\n<li>The template engine inserts the JSON-data in the template provided in the wordpress-shortcode inside a page &#8211; whereby some extras like urlencoding can be invoked.<\/li>\n<\/ul>\n<h4>How to start and help<\/h4>\n<ul>\n<li><a href=\"http:\/\/json-content-importer.com\/support\/faq\/\" title=\"Step 1 to 9 using this plugin, plus: examples and the PRO-Version\" rel=\"nofollow\">Step 1 to 9 using this plugin, plus: examples and the PRO-Version<\/a>.<\/li>\n<\/ul>\n<h4>Simple Example of wordpress-shortcode<\/h4>\n<p>&#8216;[jsoncontentimporter<\/p>\n<ul>\n<li>url=&#8221;http:\/\/&#8230;json&#8221;<\/li>\n<li>numberofdisplayeditems=&#8221;number: how many items of level 1 should be displayed? display all: leave empty or set -1&#8243;<\/li>\n<li>urlgettimeout=&#8221;number: who many seconds for loading url till timeout?&#8221;<\/li>\n<li>basenode=&#8221;starting point of datasets, the base-node in the JSON-Feed where the data is&#8221;<\/li>\n<li>oneofthesewordsmustbein=&#8221;default empty, if not empty keywords spearated by &#8216;,&#8217;. At least one of these keywords must be in the created text (here: text=code without html-tags)&#8221;<\/li>\n<li>oneofthesewordsmustbeindepth=&#8221;default: 1, number: where in the JSON-tree oneofthesewordsmustbein must be?&#8221;<\/li>\n<\/ul>\n<p>]<\/p>\n<p>Any HTML-Code plus &#8220;basenode&#8221;-datafields wrapped in &#8220;{}&#8221;<br \/>\n{subloop:&#8221;basenode_subloop&#8221;:&#8221;number of subloop-datasets to be displayed&#8221;}<br \/>\nAny HTML-Code plus &#8220;basenode_subloop&#8221;-datafields wrapped in &#8220;{}&#8221;. If JSON-data is HTML add &#8220;html&#8221; flag like &#8220;{fieldname:html}&#8221;<br \/>\n{\/subloop:&#8221;basenode_subloop&#8221;}<\/p>\n<p>[\/jsoncontentimporter]&#8217;<\/p>\n<ul>\n<li>templates like &#8220;{subloop-array:AAAA:10}{text}{subloop:AAAA.image:10}{id}{\/subloop:AAAA.image}{\/subloop-array:AAAA}&#8221; are possible:<br \/>\none is the recursive usage of &#8220;subloop-array&#8221; and &#8220;subloop&#8221;.<br \/>\nthe other is &#8220;{subloop:AAAA.image:10}&#8221; where &#8220;AAAA.image&#8221; is the path to an object. This is fine for some JSON-data.<\/li>\n<\/ul>\n<h4>Some special add-ons for datafields<\/h4>\n<ul>\n<li>&#8220;{street:purejsondata}&#8221;: Default-display of a datafield is NOT HTML, but HTML-Tags are converted : use this to use really the pure data from the JSON-Feed<\/li>\n<li>&#8220;{street:html}&#8221;: Default-display of a datafield is NOT HTML: &#8220;&lt;&#8221; etc. are converted to &#8220;&amp;amp,lt;&#8221;. Add &#8220;html&#8221; to display the HTML-Code as Code.<\/li>\n<li>&#8220;{street:htmlAndLinefeed2htmlLinefeed}&#8221;: Same as &#8220;{street:html}&#8221; plus &#8220;\\n&#8221;-Linefeeds are converted to HTML-Linebreak<\/li>\n<li>&#8220;{street:ifNotEmptyAddRight:,}&#8221;: If datafield &#8220;street&#8221; is not empty, add &#8220;,&#8221; right of datafield-value. allowed chars are: &#8220;a-zA-Z0-9,;_-:&lt;&gt;\/ &#8220;<\/li>\n<li>&#8220;{street:html,ifNotEmptyAddRight:extratext}&#8221;: you can combine &#8220;html&#8221; and &#8220;ifNotEmptyAdd&#8230;&#8221; like this<\/li>\n<li>&#8220;{street:ifNotEmptyAdd:,}&#8221;: same as &#8220;ifNotEmptyAddRight&#8221;<\/li>\n<li>&#8220;{street:ifNotEmptyAddLeft:,}&#8221;: If datafield &#8220;street&#8221; is not empty, add &#8220;,&#8221; left of datafield-value. allowed chars are: &#8220;a-zA-Z0-9,;_-:&lt;&gt;\/ &#8220;<\/li>\n<li>&#8220;{locationname:urlencode}&#8221;: Insert the php-urlencoded value of the datafield &#8220;locationname&#8221;. Needed when building URLs<\/li>\n<li>&#8220;{locationname:unique}&#8221;: only display the first instance of a datafield. Needed when JSON delivers data more than once<\/li>\n<\/ul>\n<h4>JSON Content Importer PRO<\/h4>\n<p>This free version of &#8220;JSON Content Importer&#8221; can put together many JSON-Feeds and is flexible with it&#8217;s template-engine. But sometimes you might need more:<\/p>\n<ul>\n<li>using as Widget<\/li>\n<li>application building by creating a searchform and connect it to a JSON-API in the background: pass GET-Variables to use a dynamic JSON-Feed-URL (&#8220;talk to API \/ webservice&#8221;)<\/li>\n<li>usage on multisite installations<\/li>\n<li>store Templates independent of pages<\/li>\n<li>more Shortcode-Parameters<\/li>\n<li>executing Shortcodes inside a template and<\/li>\n<li>more features&#8230;<\/li>\n<\/ul>\n<p>If the free version comes to your limit, I&#8217;m looking forward that you <a href=\"http:\/\/json-content-importer.com\/compare\/\" title=\"COMPARE PRO and FREE of the JSON Content Importer\" rel=\"nofollow\">COMPARE PRO and FREE of the JSON Content Importer<\/a>.<\/p>\n","installation":"<p>For detailed installation instructions, please read the <a href=\"https:\/\/codex.wordpress.org\/Managing_Plugins#Installing_Plugins\" rel=\"nofollow\">standard installation procedure for WordPress plugins<\/a>.<\/p>\n<ol>\n<li>Login to your WordPress installation<\/li>\n<li>Install plugin by uploading json-content-importer.zip to <code>\/wp-content\/plugins\/<\/code>.<\/li>\n<li>Activate the plugin through the <em>Plugins<\/em> menu.<\/li>\n<li>Klick on &#8220;JSON Content Importer&#8221; menuentry in the left bar: basic caching-settings and more instructions about usage.<\/li>\n<li>Cache folder: WP_CONTENT_DIR.&#8217;\/cache\/jsoncontentimporter&#8217;. So &#8220;WP_CONTENT_DIR.&#8217;\/cache\/'&#8221; must be writable for the http-daemon. The plugin checks this and might aborts with an error-message like dir is missing or not writeable. if so: check permissions of the directories.<\/li>\n<\/ol>\n","faq":"\n<h4>Installation Instructions<\/h4>\n<p>\n<p>For detailed installation instructions, please read the <a href=\"https:\/\/codex.wordpress.org\/Managing_Plugins#Installing_Plugins\" rel=\"nofollow\">standard installation procedure for WordPress plugins<\/a>.<\/p>\n<ol>\n<li>Login to your WordPress installation<\/li>\n<li>Install plugin by uploading json-content-importer.zip to <code>\/wp-content\/plugins\/<\/code>.<\/li>\n<li>Activate the plugin through the <em>Plugins<\/em> menu.<\/li>\n<li>Klick on &#8220;JSON Content Importer&#8221; menuentry in the left bar: basic caching-settings and more instructions about usage.<\/li>\n<li>Cache folder: WP_CONTENT_DIR.&#8217;\/cache\/jsoncontentimporter&#8217;. So &#8220;WP_CONTENT_DIR.&#8217;\/cache\/'&#8221; must be writable for the http-daemon. The plugin checks this and might aborts with an error-message like dir is missing or not writeable. if so: check permissions of the directories.<\/li>\n<\/ol>\n<\/p>\n<h4>Help! I need more information!<\/h4>\n<p>\n<p><a href=\"http:\/\/json-content-importer.com\/support\/faq\/\" title=\"Check the plugin-website!\" rel=\"nofollow\">Check the plugin-website!<\/a><\/p>\n<\/p>\n<h4>What does this plugin do?<\/h4>\n<p>\n<p>This plugin gives a wp-shortcode for use in a page\/blog to import, cache and display JSON-data. Inside wp-shortcode some markups (and attributes like urlencode) are defined to define how to display the data.<\/p>\n<\/p>\n<h4>How can I make sure the plugin works?<\/h4>\n<p>\n<p>Create a sample-page and use the wordpress-shortcode &#8220;jsoncontentimporter&#8221;. An example is given in the plugin-configpage and in the &#8220;Description&#8221;-Section.<br \/>\nsee also: <a href=\"http:\/\/json-content-importer.com\/support\/faq\/\" title=\"Step 1 to 9 using this plugin, plus: examples\" rel=\"nofollow\">Step 1 to 9 using this plugin, plus: examples<\/a>.<br \/>\nThe Pro-version comes with a installation-check option.<\/p>\n<\/p>\n<h4>Who do I find the proper template for my JSON?<\/h4>\n<p>\n<p><a href=\"http:\/\/json-content-importer.com\/support\/faq\/\" title=\"Check the plugin-website!\" rel=\"nofollow\">Check the plugin-website!<\/a><br \/>\nFree-Version: <a href=\"https:\/\/wordpress.org\/support\/plugin\/json-content-importer\" rel=\"nofollow\">If you&#8217;re lost: open ticket at wordPress.org<\/a> please provide the JSON-code or link to it (either in the posting or in a mail to the plugin author).<\/p>\n<\/p>\n<h4>Don&#8217;t forget:<\/h4>\n<p>\n<p><a href=\"https:\/\/www.paypal.com\/cgi-bin\/webscr?cmd=_s-xclick&amp;hosted_button_id=APWXWK3DF2E22\" rel=\"nofollow\">Donate whatever this plugin is worth for you<\/a><\/p>\n<\/p>\n<h4>What does this plugin NOT do?<\/h4>\n<p>\n<p>The plugins templateengine of the free version is focused on some basic JSON-imports.<br \/>\nIf this comes to a limit check out the pro-version: There you can use the twig-templatengine and many other features.<br \/>\nYour options if this plugin does not work:<\/p>\n<ul>\n<li>use correct code for this plugin \ud83d\ude09<\/li>\n<li>if the above is ok, change the JSON-Input<\/li>\n<li><a href=\"https:\/\/wordpress.org\/support\/plugin\/json-content-importer\" rel=\"nofollow\">open ticket at wordPress.org<\/a> provide the JSON-code there or an email to the plugin-author.<\/li>\n<li><a href=\"http:\/\/json-content-importer.com\/support\/faq\/\" title=\"Check the pro plugin!\" rel=\"nofollow\">Check the pro-plugin!<\/a><\/li>\n<\/ul>\n<\/p>\n<h4>Where is this plugin from?<\/h4>\n<p>\n<p>This plugin is made in munich, bavaria, germany!<br \/>\nFamous for Oktoberfest, FC Bayern Munich, AllianzArena, DLD, TUM, BMW, Siemens, seas, mountains and much more&#8230;<\/p>\n<\/p>\n\n","changelog":"<h4>1.2.18<\/h4>\n<ul>\n<li>Plugin is ok with WordPress 4.7.5<\/li>\n<li>New option: Add Default Useragent for http-request (some APIs need that)<\/li>\n<\/ul>\n<h4>1.2.17<\/h4>\n<ul>\n<li>Plugin is ok with WordPress 4.7<\/li>\n<li>https instead of http for Plugin-Website<\/li>\n<li>Remove invalid quotation marks in shortcode-attributes (when copypasting example code this can happen)<\/li>\n<\/ul>\n<h4>1.2.16<\/h4>\n<ul>\n<li>Plugin is ok with WordPress 4.6.1<\/li>\n<li>Plugin is ok with PHP 7.0<\/li>\n<li>Cleaner Code<\/li>\n<\/ul>\n<h4>1.2.15<\/h4>\n<ul>\n<li>Plugin is ok with WordPress 4.5.2<\/li>\n<li>Added features for coming future addons<\/li>\n<\/ul>\n<h4>1.2.14<\/h4>\n<ul>\n<li>Plugin is ok with WordPress 4.5<\/li>\n<li>Improved description<\/li>\n<\/ul>\n<h4>1.2.13<\/h4>\n<ul>\n<li>Caching-Bug Fixed: WordPress 4.4.2 does not create a &#8220;\/cache\/&#8221; folder. If &#8220;\/cache\/&#8221; is missing, the plugin creates on. This is relevant for totally new WordPress installations, as older ones should have such a directory.<\/li>\n<\/ul>\n<h4>1.2.12<\/h4>\n<ul>\n<li>Plugin is ok with WordPress 4.4<\/li>\n<li>minor change: prevent direct calls of plugin<\/li>\n<li>bug fixed: path of cached files is now set ok<\/li>\n<\/ul>\n<h4>1.2.11<\/h4>\n<ul>\n<li>bugfix: problems with numeric JSON-values and field manipulators like {JSONkey:ifNotEmptyAdd:&#8230;.}<\/li>\n<li>beta feature Vers. 0.2: Fixed bug in using oAuth-Bearer-Accesscode for authentification at JSON-Server: Bearer-Code is added to the Request-Header.<\/li>\n<\/ul>\n<h4>1.2.10<\/h4>\n<ul>\n<li>bugfix: caching now works even with very long URLs<\/li>\n<li>beta feature: On the Optionpage you can set an oAuth-Bearer-Accesscode for authentification at JSON-Server: This Bearer-Code is added to the Request-Header.<\/li>\n<\/ul>\n<h4>1.2.9<\/h4>\n<ul>\n<li>new: &#8220;{street:purejsondata}&#8221;: Default-display of a datafield is NOT HTML, but HTML-Tags are converted. If you want to use really the pure data from the JSON-Feed, add &#8220;:purejsondata&#8221;. Try first {street}, then {street:html} and then {street:purejsondata}. In some cases: Take care that &#8220;meta http-equiv=content-type&#8230;&#8221; is set to &#8220;utf-8&#8221;<\/li>\n<\/ul>\n<h4>1.2.8<\/h4>\n<ul>\n<li>bugfix: handling of JSON-values with $<\/li>\n<\/ul>\n<h4>1.2.7<\/h4>\n<ul>\n<li>WordPress 4.3.1: check &#8211; all ok<\/li>\n<li>bugfix: correct encoding of spaces when using {FIELD:html}<\/li>\n<li>bugfix: deleting unfilled template-items containing dots<\/li>\n<\/ul>\n<h4>1.2.6<\/h4>\n<ul>\n<li>WordPress 4.3: check &#8211; all ok<\/li>\n<li>added feature: remove unfilled template-placeholders {&#8230;}<\/li>\n<li>introducing &#8220;JSON Content Importer PRO&#8221;<\/li>\n<\/ul>\n<h4>1.2.5<\/h4>\n<ul>\n<li>WordPress 4.2.3: check<\/li>\n<li>minor bugfix regarding attribute &#8220;ifNotEmptyAddRight&#8221;<\/li>\n<li>new Pluginwebsite: http:\/\/json-content-importer.com\/<\/li>\n<\/ul>\n<h4>1.2.4<\/h4>\n<ul>\n<li>&#8220;&amp;&#8221; in JSON-Feed-URLs are replaced by &#8220;&amp;&#8221;<\/li>\n<\/ul>\n<h4>1.2.3<\/h4>\n<ul>\n<li>added a donated feature: new shortcode-params &#8220;oneofthesewordsmustnotbein&#8221;, &#8220;oneofthesewordsmustnotbeindepth&#8221;. This is for excluding JSON-data from display: When one of the &#8220;,&#8221;-separated keywords at &#8220;oneofthesewordsmustnotbein&#8221; is found in the textblock, ignore this textblock<\/li>\n<\/ul>\n<h4>1.2.2<\/h4>\n<ul>\n<li>minor bugfix: JSON-Structures like { &#8220;$a&#8221;: &#8220;$b&#8221;} can be handled (before: &#8220;$&#8221; made problems)<\/li>\n<\/ul>\n<h4>1.2.1<\/h4>\n<ul>\n<li>new feature &#8220;{street:htmlAndLinefeed2htmlLinefeed}&#8221;: Text-Linefeeds of JSON-data are converted to HTML-Linefeeds<\/li>\n<li>Boolean JSON-Values were ignored before this version. Now the text &#8220;true&#8221; or &#8220;False&#8221; is displayed<\/li>\n<li>Bugfixing Cacher: Timeout-Parameter of cache was not handled right<\/li>\n<li>Fixed a bug with JSON-Value containing &#8220;$&#8221;<\/li>\n<\/ul>\n<h4>1.2.0<\/h4>\n<ul>\n<li>new shortcode-parameter: &#8220;oneofthesewordsmustbein&#8221; and &#8220;oneofthesewordsmustbeindepth&#8221;<\/li>\n<li>filter &amp; hook for third party extensions added: hook &#8220;json_content_importer_extension&#8221; and filter &#8220;json_content_importer_result_root&#8221;<\/li>\n<li>Sourcecode: Classes rearranged<\/li>\n<li>minor bugfix: number of items in subloop\/subloop-array was sometimes ignored and all was displayed<\/li>\n<li>&#8220;made in munich&#8221; added (see faq)<\/li>\n<\/ul>\n<h4>1.1.2<\/h4>\n<ul>\n<li>Bugfix: tags like &#8220;{aa\/aa}&#8221; are ok (previous: error)<\/li>\n<li>Display JSON-HTML-Data really as HTML. Default: JSON-HTML-Data is displayed not as HTML but as HTML-Text. New in this version: tag-sytax like &#8220;{tag:html}&#8221; or &#8220;{street:html,ifNotEmptyAddRight:extratext}&#8221; allows real HTML-display.<\/li>\n<li>New parameter in &#8220;[jsoncontentimporter]&#8221;-shortcode: set http-timeout &#8220;urlgettimeout&#8221;. default is 5 seconds (ueful if source-website of JSON is slow)<\/li>\n<li>Logo of plugin: WordPress-Logo inserted<\/li>\n<li>Update of screenshots<\/li>\n<\/ul>\n<h4>1.1.1<\/h4>\n<p>Bugfixes<\/p>\n<h4>1.1.0<\/h4>\n<p>Completely rewritten template engine for even better JSON-handling:<\/p>\n<ul>\n<li>\n<p>&#8220;subloop-array&#8221;: key should also be in the closing tag, e.g. &#8220;{subloop-array:KEY:10}{some_array_field}{\/subloop-array:KEY}&#8221;.<br \/>\nThe &#8220;subloop-array&#8221; without KEY in the closing tag is ok if there is only one &#8220;subloop-array&#8221; in the template. But if there are more than one &#8220;subloop-array&#8221; in the template insert the KEY in the closing tag!<br \/>\nThen the template engine can identify the correct JSON-data.<\/p>\n<\/li>\n<li>\n<p>&#8220;subloop&#8221;: what is above for &#8220;subloop-array&#8221; is also for &#8220;subloop&#8221;, e.g.  &#8220;{subloop:KEY:10}{some_object_field}{\/subloop:KEY}&#8221;<\/p>\n<\/li>\n<li>\n<p>templates like &#8220;{subloop-array:AAAA:10}{text}{subloop:AAAA.image:10}{id}{\/subloop:AAAA.image}{\/subloop-array:AAAA}&#8221; are possible:<br \/>\none is the recursive usage of &#8220;subloop-array&#8221; and &#8220;subloop&#8221;.<br \/>\nthe other is &#8220;{subloop:AAAA.image:10}&#8221; where &#8220;AAAA.image&#8221; is the path to an object.<\/p>\n<\/li>\n<li>\n<p>JSON-data with multiple use of arrays can be handled by the template engine<\/p>\n<\/li>\n<\/ul>\n<h4>1.0.5<\/h4>\n<ul>\n<li>Added Screenshots<\/li>\n<li>Enhanced &#8220;subloop-array&#8221;, new processing of pure string\/numeric-array data (before: only string\/numeric-data in an object)<\/li>\n<li>Enhanced FAQs: Added Link to Website for better creating shortcode-markups<\/li>\n<\/ul>\n<h4>1.0.4<\/h4>\n<p>Bugfixes<\/p>\n<h4>1.0.3<\/h4>\n<p>Enhanced the template engine for better JSON-handling.<\/p>\n<h4>1.0.2<\/h4>\n<p>Initial release on WordPress.org. Any comments and feature-requests are welcome: blog@kux.de<\/p>\n","screenshots":"<ol><li><a href=\"https:\/\/ps.w.org\/json-content-importer\/assets\/screenshot-1.png?rev=1080429\"><img src=\"https:\/\/ps.w.org\/json-content-importer\/assets\/screenshot-1.png?rev=1080429\" alt=\"This screen shows the description and settings-page of the &quot;JSON Content Importer&quot;-Plugin\"><\/a><p>This screen shows the description and settings-page of the \"JSON Content Importer\"-Plugin<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/json-content-importer\/assets\/screenshot-2.png?rev=1078636\"><img src=\"https:\/\/ps.w.org\/json-content-importer\/assets\/screenshot-2.png?rev=1078636\" alt=\"This screen shows the Wordpress-Editor with some [jsoncontentimporter]-code\"><\/a><p>This screen shows the Wordpress-Editor with some [jsoncontentimporter]-code<\/p><\/li><\/ol>"},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.18.zip","screenshots":{"1":{"src":"https:\/\/ps.w.org\/json-content-importer\/assets\/screenshot-1.png?rev=1080429","caption":"This screen shows the description and settings-page of the \"JSON Content Importer\"-Plugin"},"2":{"src":"https:\/\/ps.w.org\/json-content-importer\/assets\/screenshot-2.png?rev=1078636","caption":"This screen shows the Wordpress-Editor with some [jsoncontentimporter]-code"}},"tags":{"api":"api","json":"JSON","live":"live","twig":"twig","webservice":"webservice"},"versions":{"1.0.2":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.0.2.zip","1.0.3":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.0.3.zip","1.0.4":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.0.4.zip","1.0.5":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.0.5.zip","1.1.0":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.1.0.zip","1.1.1":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.1.1.zip","1.1.2":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.1.2.zip","1.2.0":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.0.zip","1.2.1":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.1.zip","1.2.10":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.10.zip","1.2.11":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.11.zip","1.2.12":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.12.zip","1.2.13":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.13.zip","1.2.14":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.14.zip","1.2.15":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.15.zip","1.2.16":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.16.zip","1.2.17":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.17.zip","1.2.18":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.18.zip","1.2.2":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.2.zip","1.2.3":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.3.zip","1.2.4":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.4.zip","1.2.5":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.5.zip","1.2.6":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.6.zip","1.2.7":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.7.zip","1.2.8":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.8.zip","1.2.9":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.1.2.9.zip","trunk":"https:\/\/downloads.wordpress.org\/plugin\/json-content-importer.zip"},"donate_link":"https:\/\/www.paypal.com\/cgi-bin\/webscr?cmd=_s-xclick&hosted_button_id=APWXWK3DF2E22"}